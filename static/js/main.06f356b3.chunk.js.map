{"version":3,"sources":["components/APIFetch.js","components/ValuesList.js","index.js"],"names":["APIFetch","useState","data","setData","vin","setVin","useForm","register","handleSubmit","errors","formState","sclick","useCallback","fetchData","a","fetch","res","json","Results","className","to","Form","onChange","e","target","value","autoComplete","placeholder","type","required","minLength","maxLength","Button","onClick","map","item","index","Value","Variable","VariableId","ValuesList","useEffect","headers","Name","dangerouslySetInnerHTML","__html","Description","ID","rootElement","document","getElementById","render","path","element"],"mappings":"+QA0EeA,MApEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,KAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAIIC,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAITE,EAASC,uBAAY,WACzB,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,qDAAD,OACgCX,EADhC,iBADP,cACVY,EADU,gBAIGA,EAAIC,OAJP,OAIVA,EAJU,OAKhBd,EAAQc,EAAKC,SALG,2CAAH,qDAOfL,MACC,CAACT,IAEJ,OACE,qCACE,qBAAKe,UAAU,aAAf,SACE,eAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,WAAhC,UACG,IADH,gBAEgB,SAGlB,eAACE,EAAA,EAAD,CAAMF,UAAU,SAASG,SAAU,SAACC,GAAD,OAAOlB,EAAOkB,EAAEC,OAAOC,QAA1D,UACE,cAACJ,EAAA,EAAD,CAAMC,SAAUd,GAtBL,SAACN,OAsBZ,SACE,mCACEwB,aAAa,MACbP,UAAU,YACVQ,YAAY,MACZC,KAAK,QACDrB,EAAS,MAAO,CAClBsB,SAAU,WACVC,UAAW,CACTL,MAAO,IAETM,UAAW,CACTN,MAAO,UAKf,cAACO,EAAA,EAAD,CAAQb,UAAU,cAAcS,KAAK,SAASK,QAAStB,EAAvD,uBAIDF,EAAOL,KACN,mBAAGe,UAAU,YAAb,sDAGF,qBAAKA,UAAU,YAAf,SACGjB,EAAKgC,KAAI,SAACC,EAAMC,GAAP,OACRD,EAAKE,MACH,+BACGF,EAAKG,SADR,KACoBH,EAAKE,QADhBF,EAAKI,YAGZ,c,OCxBCC,MAvCf,WACE,MAAwBvC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAsC,qBAAU,WACR,IAAM5B,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MAChB,6EACA,CACE2B,QAAS,CACP,eAAgB,sBALN,cACV1B,EADU,gBASGA,EAAIC,OATP,OASVA,EATU,OAUhBd,EAAQc,EAAKC,SAVG,2CAAH,qDAYfL,MACC,IAGD,qCACE,qBAAKM,UAAU,aAAf,SACE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,WAAvB,UACG,IADH,sCAKF,qBAAKA,UAAU,YAAf,SACGjB,EAAKgC,KAAI,SAACC,EAAMC,GAAP,OACR,qBAAkBjB,UAAU,WAA5B,UACE,sBAAKA,UAAU,OAAf,cAAwBgB,EAAKQ,KAA7B,OACA,qBAAKC,wBAAyB,CAAEC,OAAQV,EAAKW,iBAFtCX,EAAKY,aCvBlBC,EAAcC,SAASC,eAAe,QAC5CC,iBACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,WAGrCL,K","file":"static/js/main.06f356b3.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./APIFetch.scss\";\n\nfunction APIFetch() {\n  const [data, setData] = useState([]);\n  const [vin, setVin] = useState(\" \");\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onChange = (data) => {};\n\n  const sclick = useCallback(() => {\n    const fetchData = async () => {\n      const res = await fetch(\n        `https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/${vin}?format=json`\n      );\n      const json = await res.json();\n      setData(json.Results);\n    };\n    fetchData();\n  }, [vin]);\n\n  return (\n    <>\n      <div className=\"headerLink\">\n        <Link to=\"/variables\" className=\"linkMain\">\n          {\" \"}\n          All variables{\" \"}\n        </Link>\n      </div>\n      <Form className=\"inputs\" onChange={(e) => setVin(e.target.value)}>\n        <Form onChange={handleSubmit(onChange)}>\n          <input\n            autoComplete=\"off\"\n            className=\"inputText\"\n            placeholder=\"Vin\"\n            type=\"text\"\n            {...register(\"vin\", {\n              required: \"required\",\n              minLength: {\n                value: 17,\n              },\n              maxLength: {\n                value: 17,\n              },\n            })}\n          />\n        </Form>\n        <Button className=\"inputButton\" type=\"submit\" onClick={sclick}>\n          Submit\n        </Button>\n      </Form>\n      {errors.vin && (\n        <p className=\"textError\">Write a code that is 17 characters long.</p>\n      )}\n\n      <div className=\"itemsList\">\n        {data.map((item, index) =>\n          item.Value ? (\n            <ul key={item.VariableId}>\n              {item.Variable}: {item.Value}\n            </ul>\n          ) : null\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default APIFetch;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ValuesList.scss\";\r\n\r\nfunction ValuesList() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(\r\n        \"https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablelist?format=json\",\r\n        {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await res.json();\r\n      setData(json.Results);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"headerLink\">\r\n        <Link to=\"/\" className=\"linkMain\">\r\n          {\" \"}\r\n          ‚ÜêBack to Vin Code Checker\r\n        </Link>\r\n      </div>\r\n      <div className=\"testStyle\">\r\n        {data.map((item, index) => (\r\n          <ul key={item.ID} className=\"itemtest\">\r\n            <div className=\"test\"> {item.Name}:</div>\r\n            <div dangerouslySetInnerHTML={{ __html: item.Description }} />\r\n          </ul>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ValuesList;\r\n","import { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport APIFetch from \"./components/APIFetch\";\nimport ValuesList from \"./components/ValuesList\";\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap');\n</style>\n\n\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<APIFetch />} />\n      <Route path=\"variables\" element={<ValuesList />} />\n    </Routes>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}